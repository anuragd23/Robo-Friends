{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchField","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","haserror","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACA,qBAAKC,UAAU,MAAf,SACA,uBAAOA,UAAU,mCACjBC,KAAK,SACLC,YAAY,gBACZC,SAAaJ,OCOFK,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKP,UAAY,mDAAjB,UACI,qBAAKQ,IAAI,QAAQC,IAAG,+BAA0BF,EAA1B,cACpB,gCACA,6BAAKF,IACL,4BAAIC,WCgBDI,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEAP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGP,UCDZQ,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,8DAMAC,EAAMC,GACpBC,KAAKC,SAAS,CAAEC,UAAS,M,+BAIzB,OAAGF,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAfES,aCqDbC,G,wDA/CX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SAd1C,EAAKb,MAAQ,CACTZ,OAAQ,GACRuB,YAAa,IAJR,E,gEAQQ,IAAD,OAChBG,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACjB,OAAQ8B,S,+BAUzC,IAAD,EAEoCd,KAAKJ,MAA7BZ,EAFZ,EAEYA,OAAQuB,EAFpB,EAEoBA,YACVQ,EAAe/B,EAAOgC,QAAQ,SAAAC,GAChC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAYW,kBAIzD,OAAKlC,EAAOoC,OAIJ,sBAAK/C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWD,aAAc4B,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUrB,OAAQ+B,WARpB,oBAAI1C,UAAU,KAAd,yB,GA9BA8B,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACCC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.d315fa90.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n    <div className='pa2'>\r\n    <input className='pa3 ba b--green bg-lightest-blue' \r\n    type='search' \r\n    placeholder='search robots'\r\n    onChange =  {searchChange}>    \r\n    </input> \r\n    </div>           \r\n    );\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='Robot' src={`https://robohash.org/${id}?200x200`}></img>       \r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div> \r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n        { \r\n        robots.map((user, i) => {\r\n            return (\r\n            <Card \r\n            key={robots[i].id} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}>\r\n            </Card>\r\n            );\r\n        })\r\n        }\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({ haserror:true })\r\n    } \r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\r\n        .then(users => this.setState({robots: users})); \r\n    }\r\n\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });  \r\n    } \r\n\r\n    render()\r\n    {\r\n        \r\n        const { robots, searchfield } = this.state;\r\n        const filterRobots = robots.filter( robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })  \r\n\r\n\r\n        if (!robots.length) {\r\n           return <h1 className='f1'>Loading</h1> \r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                <h1 className='f1'>RoboFiends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}></SearchBox>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                    <CardList robots={filterRobots}></CardList>\r\n                    </ErrorBoundary>  \r\n                </Scroll>\r\n                \r\n                </div>       \r\n            );\r\n        } \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App></App>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}